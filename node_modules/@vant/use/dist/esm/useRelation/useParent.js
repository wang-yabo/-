import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import { ref, inject, computed, onUnmounted, getCurrentInstance } from 'vue';
export function useParent(key) {
  var parent = inject(key, null);

  if (parent) {
    var instance = getCurrentInstance();

    var _link = parent.link,
        _unlink = parent.unlink,
        internalChildren = parent.internalChildren,
        rest = _objectWithoutPropertiesLoose(parent, ["link", "unlink", "internalChildren"]);

    _link(instance);

    onUnmounted(function () {
      _unlink(instance);
    });
    var index = computed(function () {
      return internalChildren.indexOf(instance);
    });
    return {
      parent: rest,
      index: index
    };
  }

  return {
    parent: null,
    index: ref(-1)
  };
}